@page
@model MegaDeskWebApp.Pages.DeskQuotes.IndexModel


<div class="view">

    <div class="center-v">
        <p><a asp-page="../Index">Home</a></p>
        <p><a asp-page="Create">Add New Quote</a></p>
        <form asp-page="./Index" method="get">
            <div class="form-actions">
                <p>
                    <input type="text" placeholder="Search by Name" name="SearchString" 
                    value="@Model.CurrentFilter" />
                    <input type="submit" value="Search" class="button button2 btn btn-default" />
                    
                </p>
                <a asp-page="./Index">Back to full list</a>
            </div>
        </form>
        <table>
            <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].CustomerName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].QuoteDate)
                    </a>
                </th>
                <th>@Html.DisplayNameFor(model => model.DeskQuote[0].SurfaceArea)</th>
                <th>@Html.DisplayNameFor(model => model.DeskQuote[0].DesktopMaterial)</th>
                <th>@Html.DisplayNameFor(model => model.DeskQuote[0].NumberOfDrawers)</th>
                <th>@Html.DisplayNameFor(model => model.DeskQuote[0].RushDays)</th>
                <th>@Html.DisplayNameFor(model => model.DeskQuote[0].QuoteAmount)</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.DeskQuote)
                {
                <tr>

                    @* To edit and see the details, please click the name *@
                <td><a asp-page="./Details" asp-route-id="@item.ID">@Html.DisplayFor(modelItem => 
                item.CustomerName)</a></td>

                <td>@Html.DisplayFor(modelItem => item.QuoteDate)</td>
                <td>@Html.DisplayFor(modelItem => item.SurfaceArea)</td>
                <td>@Html.DisplayFor(modelItem => item.DesktopMaterial)</td>
                <td>@Html.DisplayFor(modelItem => item.NumberOfDrawers)</td>
                <td>@Html.DisplayFor(modelItem => item.RushDays)</td>
                <td>@Html.DisplayFor(modelItem => item.QuoteAmount)</td>
                <td>
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
                </tr>
                }
            </tbody>
        </table>

        <div>
              @{
            
            var prevDisabled = !Model.DeskQuote.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.DeskQuote.HasNextPage ? "disabled" : "";

            <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.DeskQuote.PageIndex -1)"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="btn btn-default @prevDisabled button">
            Previous
            </a>

            <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.DeskQuote.PageIndex +1)"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="btn btn-default @nextDisabled button">
            Next
            </a>
         }
        <div>
    </div>
</div>

